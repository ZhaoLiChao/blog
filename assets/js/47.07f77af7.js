(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{201:function(t,a,e){"use strict";e.r(a);var r=e(0),v=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"react-native-个人开发感受"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-native-个人开发感受"}},[t._v("#")]),t._v(" React Native 个人开发感受")]),t._v(" "),e("h4",{attrs:{id:"_1-前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-前言"}},[t._v("#")]),t._v(" 1. 前言")]),t._v(" "),e("p",[t._v("react native虽然是当下比较好的跨平台开发解决方案，但是Hybrid APP比较比不上原生开发，有很多效果都无法实现。但是，react native有很多优秀的第三方库，足以满足我们的大部分开发。")]),t._v(" "),e("h4",{attrs:{id:"_2-react-native-使用感受"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-react-native-使用感受"}},[t._v("#")]),t._v(" 2. react native 使用感受")]),t._v(" "),e("p",[t._v("react native是js框架react在移动平台的衍生物，其框架里还是有一些思路是延用于pc端。导致其在客户端（手机app）上有一些体验性问题。")]),t._v(" "),e("p",[t._v("例：RN里面的Image组件，当其图片来源是一个url时，每次进入看这个图片时，Image组件都会根据url去服务器拉取一次数据（即图片，而且该请求还是有Image组件自身发起的）；RN在图片缓存这块上还并不是很完善（android可以说是没有），这会导致app在使用时增加流量消耗；以后的版本这种情况可能会被改进哈！")]),t._v(" "),e("p",[t._v("react native本身是并没有提供太好的解决方法的，只能用原生代码（比较简单）或者第三方库（我没有找到比较好的...）解决。")]),t._v(" "),e("p",[t._v("总的来说，如果是前端并且不会原生的话，我觉得写react native还是比较麻烦的，特别是在一些底层问题的解决上，你可能需要花更多的时间去找三方库实现你的需求；还有就是web到app的一个思想的转变。")]),t._v(" "),e("p",[e("strong",[t._v("纯属个人看法，不喜勿喷！")])])])}),[],!1,null,null,null);a.default=v.exports}}]);