(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{208:function(a,e,t){"use strict";t.r(e);var r=t(0),s=Object(r.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h3",{attrs:{id:"webpack基本介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack基本介绍"}},[a._v("#")]),a._v(" Webpack基本介绍")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cDovL2FwaS5mbHk2My5jb20vdnVlX2Jsb2cvcHVibGljL1VwbG9hZHMvMjAxNzExMTAvNWEwNTAwNzEzMDdiYS5qcGc?x-oss-process=image/format,png",alt:"webpack打包原来"}})]),a._v(" "),t("h4",{attrs:{id:"_1-什么是webpack？-官方文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是webpack？-官方文档"}},[a._v("#")]),a._v(" 1. 什么是webpack？   "),t("a",{attrs:{href:"https://www.webpackjs.com/concepts/",target:"_blank",rel:"noopener noreferrer"}},[a._v("官方文档"),t("OutboundLink")],1)]),a._v(" "),t("p",[a._v("webpack 是一个现代 JavaScript 应用程序的静态模块打包器(module bundler),当 webpack 处理应用程序时，它会递归地构建一个依赖关系图(dependency graph)，其中包含应用程序需要的每个模块，然后将所有这些模块打包成一个或多个 bundle")]),a._v(" "),t("h4",{attrs:{id:"_2-使用webpack作为前端构建工具有哪些作用？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用webpack作为前端构建工具有哪些作用？"}},[a._v("#")]),a._v(" 2. 使用webpack作为前端构建工具有哪些作用？")]),a._v(" "),t("ul",[t("li",[a._v("代码转换：TypeScript 编译成 JavaScript、SCSS 编译成 CSS 等。")]),a._v(" "),t("li",[a._v("文件优化：压缩 JavaScript、CSS、HTML 代码，压缩合并图片等。")]),a._v(" "),t("li",[a._v("代码分割：提取多个页面的公共代码、提取首屏不需要执行部分的代码让其异步加载。")]),a._v(" "),t("li",[a._v("模块合并：在采用模块化的项目里会有很多个模块和文件，需要构建功能把模块分类合并成一个文件。")]),a._v(" "),t("li",[a._v("自动刷新：监听本地源代码的变化，自动重新构建、刷新浏览器。")]),a._v(" "),t("li",[a._v("代码校验：在代码被提交到仓库前需要校验代码是否符合规范，以及单元测试是否通过。")]),a._v(" "),t("li",[a._v("自动发布：更新完代码后，自动构建出线上发布代码并传输给发布系统。")])]),a._v(" "),t("h4",{attrs:{id:"_3-在webpack应用中有两个核心"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-在webpack应用中有两个核心"}},[a._v("#")]),a._v(" 3. 在webpack应用中有两个核心:")]),a._v(" "),t("ul",[t("li",[a._v("a.  模块转换器，用于把模块原内容按照需求转换成新内容，可以加载非 JS 模块  webpack-loader")]),a._v(" "),t("li",[a._v("b.  扩展插件，在 Webpack 构建流程中的特定时机注入扩展逻辑来改变构建结果或做你想要的事情。")])]),a._v(" "),t("h3",{attrs:{id:"webpack里面是使用commonjs模块的方式引入，这种方式默认在浏览器上是无法运行的，所以需要在es6-module的时候自己实现commonjs规范来进行打包！（webpack打包原理）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack里面是使用commonjs模块的方式引入，这种方式默认在浏览器上是无法运行的，所以需要在es6-module的时候自己实现commonjs规范来进行打包！（webpack打包原理）"}},[a._v("#")]),a._v(" webpack里面是使用CommonJS模块的方式引入，这种方式默认在浏览器上是无法运行的，所以需要在ES6 Module的时候自己实现CommonJS规范来进行打包！（webpack打包原理）")]),a._v(" "),t("h4",{attrs:{id:"es6-module-和-commonjs-的对比："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#es6-module-和-commonjs-的对比："}},[a._v("#")]),a._v(" ES6 Module 和 CommonJS 的对比：")]),a._v(" "),t("table",[t("thead",[t("tr",[t("th",[a._v("使用方法")]),a._v(" "),t("th",[a._v("ES6 Module")]),a._v(" "),t("th",[a._v("CommonJS")])])]),a._v(" "),t("tbody",[t("tr",[t("td",[a._v("导出")]),a._v(" "),t("td",[a._v("export")]),a._v(" "),t("td",[a._v("module.exports")])]),a._v(" "),t("tr",[t("td",[a._v("引入")]),a._v(" "),t("td",[a._v("import")]),a._v(" "),t("td",[a._v("require")])])])]),a._v(" "),t("h4",{attrs:{id:"_4-webpack-的主要配置属性有哪些？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-webpack-的主要配置属性有哪些？"}},[a._v("#")]),a._v(" 4. webpack 的主要配置属性有哪些？")]),a._v(" "),t("ol",[t("li",[t("strong",[a._v("入口(entry)")]),t("br"),a._v("\n入口起点(entry point)指示 webpack 应该使用哪个模块，来作为构建其内部依赖图的开始。进入入口起点后，webpack 会找出有哪些模块和库是入口起点（直接和间接）依赖的。")]),a._v(" "),t("li",[t("strong",[a._v("出口(output)")]),t("br"),a._v("\noutput 属性告诉 webpack 在哪里输出它所创建的 bundles，以及如何命名这些文件，默认值为 ./dist/main.js。基本上，整个应用程序结构，都会被编译到你指定的输出路径的文件夹中")]),a._v(" "),t("li",[t("strong",[a._v("loader")]),t("br"),a._v("\nloader 让 webpack 能够去处理那些非 JavaScript 文件（webpack 自身只理解 JavaScript）。loader 可以将所有类型的文件转换为 webpack 能够处理的有效模块，然后你就可以利用 webpack 的打包能力，对它们进行处理。如 es6+、css、less、sass、img...")]),a._v(" "),t("li",[t("strong",[a._v("插件(plugins)")]),t("br"),a._v("\n插件可以用于执行范围更广的任务。插件的范围包括，从打包优化和压缩，一直到重新定义环境中的变量。插件接口功能极其强大，可以用来处理各种各样的任务。如启动开发服务器，将打包后的文件字段引入到html中...")]),a._v(" "),t("li",[t("strong",[a._v("模式")]),t("br"),a._v("\n通过选择 development 或 production 之中的一个，来设置 mode 参数，你可以启用相应模式下的 webpack 内置的优化")])])])}),[],!1,null,null,null);e.default=s.exports}}]);